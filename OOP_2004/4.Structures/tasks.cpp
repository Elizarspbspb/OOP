#include <iostream>
using namespace std;

struct Distance     // длина в английской системе
{
    int feet;
    float inches;
};

// Task 1
struct phone        // объявление структуры phone
{
    int sity;       // код города
    int station;    // номер телефонной станции
    int abonent;    // номер абонента
};

// Task 2
struct point        // coordinates
{
    int x;      
    int y;      
};

// Task 3
struct Volume        // coordinates
{
    Distance length;      
    Distance width; 
    Distance height;     
};

int main() {
    /*1. Номер телефона, например (212) 767—8900, можно условно разделить на три части: 
    код города (212), номер телефонной станции (767) и номер абонента (8900). Напишите программу 
    с использованием структуры, позволяющую раздельно хранить эти три части телефонного номера. 
    Назовите структуру phone. Создайте две структурные переменные типа phone. Инициализацию одной из них 
    произведите сами, а значения для другой запросите с клавиатуры. Затем выведите содержимое обеих 
    переменных на экран. Результат работы программы должен выглядеть приблизительно так:
        Введите код города, номер станции и номер абонента:
        415 555 1212
        Мой номер (212) 767-8900
        Ваш номер (415) 555-1212    */
    /*phone tp1, tp2;
    tp1 = {212, 767, 8900};
    cout << "Введите код города, номер станции и номер абонента: ";
    cin >> tp2.sity >> tp2.station >> tp2.abonent;
    cout << "Мой номер (" << tp1.sity << ") " << tp1.station << "-" << tp1.abonent << endl;
    cout << "Мой номер (" << tp2.sity << ") " << tp2.station << "-" << tp2.abonent << endl;*/

    /*2. Расположение точки на плоскости можно задать с помощью двух координат: x и y. Например, 
    если точка имеет координаты (4, 5), то это значит, что она отстоит на 4 единицы справа 
    от вертикальной оси и на 5 единиц вверх от горизонтальной оси. Сумма двух точек определяется 
    как точка, имеющая координаты, равные сумме соответствующих координат слагаемых. Напишите программу, 
    использующую для интерпретации точки на плоскости структуру с названием point. Определите три 
    переменные типа point, и две из них инициализируйте с помощью значений, вводимых с клавиатуры. 
    Затем присвойте третьей переменной значение суммы первых двух переменных и выведите результат 
    на экран. Результат работы программы может выглядеть следующим образом:
        Введите координаты точки p1: 3 4
        Введите координаты точки p2: 5 7
        Координаты точки p1 + p2 равны 8.11 */
    /*point p1, p2, p3;
    cout << "Введите координаты точки 1: ";
    cin >> p1.x >> p1.y;
    cout << "Введите координаты точки 2: ";
    cin >> p2.x >> p2.y;
    p3.x = p1.x + p2.x;
    p3.y = p1.y + p2.y;
    cout << "Координаты точки p1 + p2 равны " << p3.x << '.' << p3.y << endl;*/

    /*3. Создайте структуру с именем Volume, содержащую три поля типа Distance из примера englstrc, для 
    хранения трех измерений помещения. Определите переменную типа Volume, инициализируйте ее, вычислите 
    объем, занимаемый помещением, и выведите результат на экран. Для подсчета объема переведите каждое из
    значений типа Distance в значение типа float, равное соответствующей длине в футах и хранимое в отдельной
    переменной. Затем для вычисления объема следует перемножить три полученные вещественные переменные. */
    Volume amount = { {16, 3.5}, {12, 6.25}, {8, 1.75} };
    // преобразование длины, ширины и высоты в вещественный формат
    float len = amount.length.feet + amount.length.inches / 12;
    float wid = amount.width.feet + amount.width.inches / 12;
    float hei = amount.height.feet + amount.height.inches / 12;
    // вычисление объема помещения
    cout << "Объем = " << len*wid*hei << endl;


    return 0;
}