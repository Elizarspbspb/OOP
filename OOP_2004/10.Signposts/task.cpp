// Глава 10. Указатели
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <ctype.h>

using namespace std;

// Task 2
class String {  // пользовательский строковый тип
private:
    char *str;  // указатель на строку
public:
    String(char *s) {
        int length = strlen(s);     // длина строки из аргумента
        str = new char[length + 1]; // занять память
        strcpy(str, s);             // скопировать туда строку
    }
    ~String() { delete str; }
    void display() { cout << str; }
    void upit();                    // каждый символ в верхний регистр
};
void String::upit() {
    char *upSymb = str;              // указатель на эту строку
    while(*upSymb) {                 // до пустого символа,
        *upSymb = toupper(*upSymb);  // каждый символ в ВЕРХНИЙ РЕГИСТР
        cout << toupper(*upSymb);
        upSymb++;                    // перейти к следующему символу
    }
}

///////////////////////////////////////////////////////////

int main(int argc, char* argv[]) 
{
    /*1. Напишите программу, которая принимает группу чисел от пользователя и помещает их в массив типа float. После того как числа 
    будут помещены в массив, программа должна подсчитать их среднее арифметическое и вывести результат на дисплей. Используйте указатели
    везде, где только возможно. */
    /*int len1 = 0; 
    float* mas1;
    // float mas1[100];             // массив чисел
    char enter;
    while (enter!='n') {
        cout << "Введите число через Enter: ";
        cin >> *(mas1 + len1++);  
        // cin >> mas[len1++];      // analog               
        cout << "Продолжить ввод (y/n): ";
        cin >> enter;
    }
    float arifmet = 0;
    for (int i=0; i < len1; i++) {
        arifmet += *(mas1 + i);
        //arifmet += mas1[i];       // analog
        cout << "!! " << arifmet << endl;
    }        
    cout << "Среднее арифметическое = " << arifmet/len1; */

    /*2. Используйте класс String из примера NEWSTR этой главы. Добавьте к нему метод upit(), который будет переводить символы строки в
    верхний регистр. Вы можете использовать библиотечную функцию toupper(), которая принимает отдельный символ в качестве аргумента и 
    возвращает символ, переведенный в верхний регистр (если это необходимо). Эта функция использует заголовочный файл Cctype. Добавьте 
    в функцию main() необходимые строки для тестирования метода upit(). */
    /*String newStr = "Этот текст написан в нижнем регистре";
    newStr.upit();
    newStr.display();*/

    /*3. Используйте массив указателей на строки, представляющие собой названия дней недели, из примера PTROSTR этой главы. Напишите 
    функции для сортировки этих строк в алфавитном порядке, используя в качестве основы функции bsort() и order() из программы PTRSORT 
    этой главы. Сортировать необходимо указатели на строки, а не сами строки. */

    
    return 0;
}